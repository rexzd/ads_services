<project name="riot" default="dist" basedir=".">
  <description>
    umu.ads.a1
  </description>

  <!-- global properties -->
  <property name="lib" location="lib"/>
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="gen" location="${build}/generated"/>
  <property name="jarfile" location="umu-ads-a1-1.2.6.jar"/>
<!--
  <property name="mainclass" value="se.umu.cs.ads.test.Test"/>
-->
  <property name="mainclass" value="se.umu.cs.ads.A1"/>

  <!-- classpath -->
  <path id="classpath.lib">
    <fileset dir="${lib}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <target name="init">
    <!-- create time stamp -->
    <tstamp/>

    <!-- create build directory structure -->
    <mkdir dir="${build}"/>
    <mkdir dir="${gen}"/>
  </target>

    <target name="protoc" depends="init">
        <echo>Running protoc with proto_path=src/se/umu/cs/ads/a1/server/grpc</echo>
        <mkdir dir="src/generated/grpc"/>
        <exec executable="protoc" failonerror="true">
            <arg value="--proto_path=src/se/umu/cs/ads/a1/server/grpc"/>
            <arg value="--java_out=src/generated/grpc"/>
            <arg value="--grpc-java_out=src/generated/grpc"/>
            <arg value="src/se/umu/cs/ads/a1/server/grpc/Messenger.proto"/>
        </exec>
    </target>

  <target name="compile" depends="init" description="compile source">
    <!-- compile from ${src} into ${build} -->
<!--
    <javac includeantruntime="false" debug="true"
           classpath="${lib}" srcdir="${src}" destdir="${build}"/>
-->
    <javac includeantruntime="false" debug="true"
           srcdir="${src}:src/generated/grpc" destdir="${build}">
      <compilerarg value="-Xlint:unchecked"/>
      <compilerarg value="-parameters"/>
      <classpath refid="classpath.lib"/>
    </javac>

    <!-- delete test classes -->
<!--
    <delete>
      <fileset dir="${build}" includes="**/*$Test.class"/>
    </delete>
-->
  </target>

  <target name="dist" depends="compile" description="generate distribution" >
    <jar jarfile="${jarfile}" basedir="${build}">
      <manifest>
        <attribute name="Main-Class" value="${mainclass}"/>
      </manifest>
    </jar>

    <delete dir="${build}"/>
  </target>

  <target name="clean" description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete file="${jarfile}"/>
    <delete>
      <fileset dir="." includes="**/*.tmp"/>
    </delete>
  </target>

  <target name="run-rest-server" depends="compile">
    <java classname="se.umu.cs.ads.a1.server.REST.RESTServer" fork="true" failonerror="true">
      <classpath>
        <pathelement path="${build}"/>
        <fileset dir="${lib}" includes="**/*.jar"/>
      </classpath>
      <jvmarg value="-Djava.util.logging.config.file=logging.properties"/>
      <arg value="8000"/>
    </java>
  </target>

    <target name="run-rest-logic" depends="compile">
        <java classname="se.umu.cs.ads.a1.Main" fork="true" failonerror="true">
            <classpath>
                <pathelement path="build"/>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <arg value="se.umu.cs.ads.a1.clients.RESTMessenger"/>
            <arg value="-logic"/>
        </java>
    </target>

    <target name="run-rest-perf" depends="compile">
        <java classname="se.umu.cs.ads.a1.Main" fork="true" failonerror="true">
            <classpath>
                <pathelement path="build"/>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <jvmarg value="-Xmx2G"/>
            <arg value="se.umu.cs.ads.a1.clients.RESTMessenger"/>
            <arg value="-perf"/>
            <redirector output="rest_perf.csv"/>
        </java>
    </target>

    <target name="run-grpc-server" depends="compile">
        <java classname="se.umu.cs.ads.a1.server.grpc.GrpcServer" fork="true" failonerror="true">
            <classpath>
                <pathelement path="${build}"/>
                <fileset dir="${lib}" includes="**/*.jar"/>
            </classpath>
            <arg value="9000"/>
        </java>
    </target>

    <target name="run-grpc-logic" depends="compile">
        <java classname="se.umu.cs.ads.a1.Main" fork="true" failonerror="true">
            <classpath>
                <pathelement path="${build}"/>
                <fileset dir="${lib}" includes="**/*.jar"/>
            </classpath>
            <arg value="se.umu.cs.ads.a1.clients.GrpcMessenger"/>
            <arg value="-logic"/>
        </java>
    </target>

    <target name="run-grpc-perf" depends="compile">
        <java classname="se.umu.cs.ads.a1.Main" fork="true" failonerror="true">
            <classpath>
                <pathelement path="${build}"/>
                <fileset dir="${lib}" includes="**/*.jar"/>
            </classpath>
            <jvmarg value="-Xmx4g"/>
            <jvmarg value="-XX:+UseG1GC"/>
            <arg value="se.umu.cs.ads.a1.clients.GrpcMessenger"/>
            <arg value="-perf"/>
            <redirector output="grpc_perf.csv"/>
        </java>
    </target>

    <target name="run-proto-server" depends="compile">
        <java classname="se.umu.cs.ads.a1.server.protobuffers.ProtoServer" fork="true" failonerror="true">
            <classpath>
                <pathelement path="${build}"/>
                <fileset dir="${lib}" includes="**/*.jar"/>
            </classpath>
            <arg value="10000"/>
        </java>
    </target>

    <target name="run-proto-logic" depends="compile">
        <java classname="se.umu.cs.ads.a1.Main" fork="true" failonerror="true">
            <classpath>
                <pathelement path="${build}"/>
                <fileset dir="${lib}" includes="**/*.jar"/>
            </classpath>
            <arg value="se.umu.cs.ads.a1.clients.ProtoMessenger"/>
            <arg value="-logic"/>
        </java>
    </target>

    <target name="run-proto-perf" depends="compile">
        <java classname="se.umu.cs.ads.a1.Main" fork="true" failonerror="true">
            <classpath>
                <pathelement path="${build}"/>
                <fileset dir="${lib}" includes="**/*.jar"/>
            </classpath>
            <jvmarg value="-Xmx2g"/>
            <arg value="se.umu.cs.ads.a1.clients.ProtoMessenger"/>
            <arg value="-perf"/>
            <redirector output="proto_perf.csv"/>
        </java>
    </target>


</project>
